@import './utils.module.scss';

@function color($color, $opacity: 1) {
    @if (map-get($colors, $color)) {
        @return rgba(map-get($colors, $color), $opacity);
    }
    @else {
        @return rgba($color, $opacity);
    }
}

@function color-mix($color1, $color2) {
    $percent: alpha($color1) * 100%;
    $opaque: opacify($color1, 1);
    @return mix($opaque, $color2, $percent);
}

// @function color-diff($color-a, $color-b) {
//     @if (type-of($color-a) == string) {
//         $color-a: map-get($colors, $color-a);
//     }
//     @if (type-of($color-b) == string) {
//         $color-b: map-get($colors, $color-b);
//     }
//     $hue: hue($color-a) - hue($color-b);
//     $saturation: saturation($color-a) - saturation($color-b);
//     $lightness: lightness($color-a) - lightness($color-b);
//     $function-hue: 'adjust-hue';
//     $function-saturation: if($saturation > 0, 'desaturate', 'saturate');
//     $function-lightness: if($lightness > 0, 'darken', 'lighten');
//     @return (
//         #{$function-hue}: - ($hue),
//         #{$function-saturation}: abs($saturation),
//         #{$function-lightness}: abs($lightness)
//     );
// }

// @mixin change-image-color($color-a, $color-b) {
//     $diff: color-diff($color-a, $color-b);
//     $hue: map-get($diff, 'adjust-hue');
//     $saturation: if(map-has-key($diff, 'saturate'), ((map-get($diff, 'saturate') + 100%) / 100%), ((100% - (map-get($diff, 'desaturate'))) / 100%));
//     $brightness: if(map-has-key($diff, 'lighten'), ((map-get($diff, 'lighten') + 100%) / 100%), ((100% - (map-get($diff, 'darken'))) / 100%));
//     filter: hue-rotate($hue) saturate($saturation) brightness($brightness);
//     -webkit-filter: hue-rotate($hue) saturate($saturation) brightness($brightness);
// }